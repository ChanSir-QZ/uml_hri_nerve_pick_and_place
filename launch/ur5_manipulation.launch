<?xml version="1.0"?>
<launch>

  <arg name="serial_no" default="843112074121" />
  <arg name="kinematics_config" default="$(find uml_hri_nerve_armada_workstation)/universal_robot/cfg/ur5e_calibration.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>

  <include file="$(find uml_hri_nerve_pick_and_place)/launch/gpd_ur5.launch" />

  <node name="Robotiq2FGripperTcpNode" pkg="robotiq_2f_gripper_control" type="Robotiq2FGripperTcpNode.py" args="10.10.10.42"/>

  <!-- Launch realsense camera nodes with actual camera (serial number typically on back of device) -->
  <include file="$(find realsense2_camera)/launch/rs_rgbd.launch">
    <arg name="serial_no" value="$(arg serial_no)"/>
    <!-- rename the camera -->
    <arg name="camera" value="wrist_camera" />
  </include>

  <!-- This transforms each resulting pointcloud into a global reference frame -->
  <node name="wrist_camera_tf2" pkg="tf" type="static_transform_publisher"
    args="0.0175 0.0 0.025 0.0 -1.57 -1.57 /d435 /wrist_camera_link 100" />

  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <!-- Run a passthrough filter to clean NaNs -->l
  <node pkg="nodelet" type="nodelet" name="x_passthrough" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/wrist_camera/depth_registered/points" />
    <rosparam>
      filter_field_name: x
      filter_limit_min: -0.5
      filter_limit_max: 0.5
      filter_limit_negative: False
    </rosparam>
  </node>

  <!-- Run a passthrough filter to clean NaNs -->
  <node pkg="nodelet" type="nodelet" name="y_passthrough" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/x_passthrough/output" />
    <rosparam>
      filter_field_name: y
      filter_limit_min: -0.5
      filter_limit_max: 0.5
      filter_limit_negative: False
    </rosparam>
  </node>

  <!-- Run a passthrough filter to clean NaNs -->
  <node pkg="nodelet" type="nodelet" name="passthrough" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/y_passthrough/output" />
    <remap from="~output" to="/filtered_points" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: -.65
      filter_limit_max: .65
      filter_limit_negative: False
    </rosparam>
  </node>

  <include file="$(find uml_hri_nerve_armada_workstation)/universal_robot/ur_e_bringup/launch/ur5e_bringup.launch" >
    <arg name="robot_ip" value="10.10.10.152"/>
    <arg name="kinematics_config" value="$(arg kinematics_config)"/>
    <arg name="robot_description_file" value="$(find uml_hri_nerve_armada_workstation)/universal_robot/ur_e_description/urdf/ur5e_robot_d435_millibar_robotiq_2f_85_workstation.urdf.xacro"/>
    <arg name="limited" value="false"/>
    <arg name="model" value="ur5"/>
    <arg name="sim_workstation" value="true"/>
    <arg name="gripper" value="robotiq_2f_85"/>
    <arg name="wrist_cam" value="d435_millibar"/>
  </include>

  <rosparam file="$(find uml_hri_nerve_pick_and_place)/cfg/ur5e_wrist_d435.yaml" />
  <node name="wrist_cam_pick_and_place" pkg="uml_hri_nerve_pick_and_place" type="wrist_cam_pick_and_place" output="screen"/>

</launch>
